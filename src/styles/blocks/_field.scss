.field {
  $v-paddings: .875rem;
  $g-paddings: 1rem;
  $min-height: 3.125rem;
  $icon-size: 1.5rem;

  position: relative;

  // –î–ª—è —Å–µ–ª–µ–∫—Ç–∞ —Å –º—É–ª—å—Ç–∏–≤—ã–±–æ—Ä–æ–º - –æ—Ç–¥.–∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  &.--type-multiselect {
    .field__input~.field__icon.--type-delete {
      opacity: 1;
      margin-right: $min-height;
    }

    &.--chip-selected {
      .field__input {
        display: none;
      }

      .field__chip-container {
        display: flex;
      }

      .field__icon.--type-dropdown {
        z-index: 2;
      }
    }
  }

  &.--type-checkbox {
    display: inline-flex;
  }

  &.--size-sm {
    $v-paddings: .75rem;
    $min-height: 2.75rem;

    & .field__label {
      font-size: .875em;
    }

    & .field__input {
      font-size: .875em;
    }
  }

  &.--state-error {

    .field__input {
      padding-right: $min-height;
      color: var(--error);
      background-color: rgba($color: map-get($colors, "error"), $alpha: .05);

      @include placeholder {
        color: var(--error);
      }
    }

    .field__label {
      color: var(--error);
    }

    .field__info {
      opacity: 1;
      color: var(--error);
    }

    .field__icon.--type-error {
      opacity: 1;
      color: var(--error);

      &::before {
        border-color: var(--error);
      }
    }

    .field__icon:not(.--type-error):not(.--type-delete) {
      opacity: 0;
      pointer-events: none;
      user-select: none;
    }
  }

  &.--type-checkbox-radio {
    display: flex;
    align-items: flex-start;
  }

  // TODO —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ.
  &__label {
    display: inline-block;
    padding-left: $g-paddings;
    line-height: 150%;
  }

  &__input {
    @extend %reset-input;
    min-height: $min-height; // –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ Iphone
    padding: $v-paddings $g-paddings; // –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤ –≤–µ—Ä—Ç. –æ—Ç—Å—Ç—É–ø—ã
    box-sizing: border-box;
    background-color: var(--white);
    border: 1px solid var(--g200);
    border-radius: 15px;
    transition: 0.35s ease-out;
    transition-property: border-color, color;

    @include placeholder {
      color: var(--darkLow);
    }

    &:focus,
    &:not(:disabled):hover,
    &:not(:focus):valid:not(:placeholder-shown) {
      border-color: var(--dark);
    }

    &.--type-textarea {
      height: 100%;
      max-height: inherit;
    }
  }

  &__checkbox {
    @extend %reset-checkbox;
    position: relative;
    display: inline-block;
    @include box(1em);
    min-width: 1em;
    cursor: pointer;

    &:hover {

      &::before {
        background-color: var(--g200);
      }

      &::after {
        border-color: var(--g300);
      }

      &+label {
        color: var(--dark);
      }
    }

    &:disabled {
      pointer-events: none;

      &:checked:before,
      &:checked+label,
      &:before,
      &+label {
        cursor: default;
        color: var(--darkLow);
      }
    }

    &:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      @include box(100%);
      border-radius: 5px;
      display: inline-block;
      border: 2px solid var(--g300);
    }

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      @include box(40%, 60%);
      display: inline-block;
      border-bottom: 3px solid transparent;
      border-right: 3px solid transparent;
      transform: rotate(40deg) translateY(-15%) translateX(60%);
    }

    &:checked:before {
      border-color: var(--primary);
      background-color: var(--primary);
    }

    &:checked::after {
      border-bottom: 3px solid var(--white);
      border-right: 3px solid var(--white);
    }

    &:checked+label {
      color: var(--dark);
      font-weight: 500;
    }

    &+label {
      color: var(--darkLow);
      padding-left: $g-paddings;
      cursor: pointer;

      &:hover {
        color: var(--dark)
      }
    }

  }

  &__checkbox-radio {
    @extend %reset-checkbox;
    vertical-align: top;
    position: relative;
    cursor: pointer;

    &+label {
      order: -1;
      margin-right: auto;
      line-height: 1.75;
      color: var(--darkLow);
      padding-left: 0;
    }

    &:checked+label {
      color: var(--dark);
    }

    &:checked::after {
      left: calc(100% - 27px);
    }

    &:checked::before {
      background-color: var(--primary);
    }

    &::before {
      content: "";
      display: block;
      @include box(50px, 30px);
      border-radius: 25px;
      background-color: var(--g200);
      box-shadow: inset 0 0 6px rgba(black, .15);
      transition: background-color .25s ease-in;
    }

    &:after {
      content: "";
      position: absolute;
      top: 3px;
      left: 3px;
      display: block;
      @include box(24px);
      border-radius: 25px;
      background-color: var(--white);
      box-shadow: 0 0 3px rgba(black, .15);
      transition: left .25s ease-in;
    }

  }

  &__icon {
    display: flex;
    color: var(--darkLow);
    cursor: pointer;

    position: absolute;
    top: 1px;
    right: 1px;
    bottom: 1px;
    width: $min-height;

    border-radius: 0 15px 15px 0;

    &:hover {
      color: var(--dark);
    }

    &:not(.--type--error):active::before {
      transform: translateY(1px);
    }

    &::before {
      font-size: $icon-size;
      line-height: 100%;
      color: inherit;
      margin: auto;
    }

    &.--type-error {
      pointer-events: none;
      user-select: none;
      opacity: 0;

      &::before {
        content: "Ôπó";
        border-radius: 50%;
        @include box($icon-size);
        border: 1px solid transparent;
      }
    }

    &.--type-eye {
      opacity: 1;
      cursor: pointer;

      &.--actived::before {
        @extend %icon-on-before;
        content: "\F0208";
      }

      &:hover {
        color: var(--dark);
      }

      &::before {
        content: "\F0209";
      }

      &:active::before {
        transform: translateY(1px);
      }
    }

    &.--type-dropdown {
      background-color: var(--g100);
      border-left: 1px solid var(--g200);

      &::before {
        content: "‚è∑";
      }
    }

    &.--type-delete {
      &:hover::before {
        color: darken(map-get($colors, "info"), 5%);
      }

      &::before {
        content: "üû©";
        color: var(--info);
      }
    }
  }

  &__info {
    margin: 0;

    position: absolute;
    bottom: calc($v-paddings * -1);
    left: $g-paddings;

    font-style: italic;
    font-size: .75em;
    opacity: 0;
  }

  // –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
  &__list-container {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    z-index: 1;
    background-color: var(--white);
    box-shadow: 0 5px 10px rgba(black, .15);
    border-radius: 15px;
    display: none;
    animation: fadeIn 0.25s ease-in-out;

    &.--opened {
      display: block;
    }
  }

  &__list {
    @extend %reset-list;
    @include scroll-bar();
    overflow: auto;
    max-height: 18em;
    padding: $v-paddings 0;

    display: flex;
    flex-direction: column;
  }

  &__item {
    flex: auto;
    padding: $v-paddings $g-paddings;
    border-bottom: 1px solid var(--g200);

    &:hover {
      background-color: var(--g100);
    }
  }

  &__list-controls {
    text-align: right;
    padding-right: $g-paddings;
    padding-left: $g-paddings;
    padding-bottom: $v-paddings;
  }

  // –°–ø–∏—Å–æ–∫ –¥–ª—è –º—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç–∞, –∫–æ–≥–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω—ã
  &__chip-container {
    background-color: var(--white);
    border: 1px solid var(--g200);
    border-radius: 15px;
    padding: .25em calc($min-height * 2) .25em .25em;
    box-sizing: border-box;

    display: none;
    flex-wrap: wrap;
    gap: .25em;

  }

  &__chip {
    position: relative;

    background-color: var(--g100);
    border: 1px solid var(--g200);
    border-radius: 15px;
  }

  &__chip-text {
    margin: 0;
    padding: $v-paddings $min-height $v-paddings $g-paddings;
  }

  &__chip-icon {
    @extend .field__icon;
    @extend .--type-delete;
  }
}

@include media(sm) {
  .field {
    &.--type-flex {
      display: grid;
      gap: 0 1.25em;
      align-items: center;
      grid-template-columns: min(35%, 20em) 1fr;

      & .field__label {
        padding-left: 0;
      }

      & .field__icon {
        margin-top: 0;
      }

      & .field__info {
        grid-column: 2/3;
      }
    }
  }
}